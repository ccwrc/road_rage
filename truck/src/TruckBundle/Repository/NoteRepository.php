<?php

namespace TruckBundle\Repository;

use Doctrine\ORM\EntityRepository;

use DateTime;

/**
 * NoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NoteRepository extends EntityRepository {
    
//    $date = new DateTime('2006-12-12');
//$date->modify('+1 day');
    
    public function countUserNotesFromLast24h($userId) {
//
    }

    public function countPublicNotesFromLast24h() {
        $day = new DateTime("now");
        $dayMinusOne = $day->modify("-1 day");

        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT COUNT (n.id) FROM TruckBundle:Note n WHERE n.timePublication'
                . ' BETWEEN :dayMinusOne AND CURRENT_TIMESTAMP() AND n.status LIKE :public');
        $query->setParameter("dayMinusOne", $dayMinusOne);
        $query->setParameter('public', 'public');
        
        return $query->getSingleScalarResult();
    }

    public function findAllPublicNotesQuery() {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT n FROM TruckBundle:Note n WHERE n.timePublication'
                        . ' <= CURRENT_TIMESTAMP() AND n.status LIKE :public ORDER BY n.timePublication'
                        . ' DESC')->setParameter('public', 'public');
        return $query;
    }
    
    public function findPrivateActualNotesByUserIdQuery($userId) {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT n FROM TruckBundle:Note n WHERE n.timePublication'
                        . ' <= CURRENT_TIMESTAMP() AND n.userId = :userId ORDER BY n.timePublication'
                        . ' DESC')->setParameter('userId', $userId);
        return $query;
    }    
    
    public function findPrivateFutureNotesByUserIdQuery($userId) {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT n FROM TruckBundle:Note n WHERE n.timePublication'
                        . ' >= CURRENT_TIMESTAMP() AND n.userId = :userId ORDER BY n.timePublication'
                        . ' ASC')->setParameter('userId', $userId);
        return $query;
    }     

}
